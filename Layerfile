#This is an example LayerCI configuration for Docker!
FROM vm/ubuntu:18.04

# To note: Layerfiles create entire VMs, *not* containers!

# install the latest version of Docker, as in the official Docker installation tutorial.
RUN apt-get update && \
    apt-get install apt-transport-https ca-certificates curl software-properties-common && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable" && \
    apt-get update && \
    apt install docker-ce && \
    apt install maven
    
   

# copy files from the repository into this staging server
COPY . .


RUN docker build -t="hello-world-java" .  
#RUN docker build -t java-docker --target test
RUN docker run -p 8080:8080 -itd --rm hello-world-java
#RUN  chmod 777 ./src/test.sh
EXPOSE WEBSITE http://localhost:8080
RUN curl -m 20  http://localhost:8080/hello
RUN curl -m 20  http://localhost:8080/hi
#RUN mvn test src/test/java/com/dockerforjavadevelopers/hello/Test2.java
#RUN docker stop `docker container ls | grep "hello-world-java:*" | awk '{ print $1 }'`
#EXPOSE WEBSITE http://localhost:80
#FROM maven:3.6.3-openjdk-11 AS maven_build

COPY pom.xml /tmp/

COPY src /tmp/src/

WORKDIR /tmp/

RUN mvn test src/test/java/com/dockerforjavadevelopers/hello/Test2.java
